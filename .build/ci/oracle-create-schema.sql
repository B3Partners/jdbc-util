CREATE TABLE AUTOMATISCH_PROCES
(
    DTYPE          VARCHAR2(255 CHAR) NOT NULL,
    ID             NUMBER(19, 0)      NOT NULL,
    CRON_EXPRESSIE VARCHAR2(255 CHAR),
    LASTRUN        TIMESTAMP,
    LOGFILE        CLOB,
    SAMENVATTING   CLOB,
    STATUS         VARCHAR2(255 CHAR),
    PRIMARY KEY (ID)
);

CREATE TABLE AUTOMATISCH_PROCES_CONFIG
(
    PROCES_ID  NUMBER(19, 0) NOT NULL,
    VALUE      CLOB,
    CONFIG_KEY VARCHAR2(255 CHAR),
    PRIMARY KEY (PROCES_ID, CONFIG_KEY)
);

CREATE TABLE BERICHT
(
    ID              NUMBER(19, 0) NOT NULL,
    BR_ORGINEEL_XML CLOB,
    BR_XML          CLOB,
    DATUM           TIMESTAMP,
    DB_XML          CLOB,
    JOB_ID          VARCHAR2(255 CHAR),
    OBJECT_REF      VARCHAR2(255 CHAR),
    OPMERKING       CLOB,
    SOORT           VARCHAR2(255 CHAR),
    STATUS          VARCHAR2(255 CHAR),
    STATUS_DATUM    TIMESTAMP,
    VOLGORDENUMMER  NUMBER(10, 0),
    XSL_VERSION     VARCHAR2(255 CHAR),
    LAADPROCESID    NUMBER(19, 0),
    PRIMARY KEY (ID)
);

CREATE TABLE GEBRUIKER_
(
    GEBRUIKERSNAAM VARCHAR2(255 CHAR) NOT NULL,
    WACHTWOORD     VARCHAR2(255 CHAR),
    PRIMARY KEY (GEBRUIKERSNAAM)
);

CREATE TABLE GEBRUIKER_GROEPEN
(
    GEBRUIKERSNAAM VARCHAR2(255 CHAR) NOT NULL,
    GROEP_         VARCHAR2(255 CHAR) NOT NULL,
    PRIMARY KEY (GEBRUIKERSNAAM, GROEP_)
);

CREATE TABLE GROEP_
(
    NAAM         VARCHAR2(255 CHAR) NOT NULL,
    BESCHRIJVING CLOB,
    PRIMARY KEY (NAAM)
);

CREATE TABLE LAADPROCES
(
    ID                 NUMBER(19, 0) NOT NULL,
    BESTAND_DATUM      TIMESTAMP,
    BESTAND_NAAM       VARCHAR2(255 CHAR),
    CONTACT_EMAIL      VARCHAR2(255 CHAR),
    GEBIED             VARCHAR2(255 CHAR),
    OPMERKING          CLOB,
    SOORT              VARCHAR2(255 CHAR),
    STATUS             VARCHAR2(255 CHAR),
    STATUS_DATUM       TIMESTAMP,
    AUTOMATISCH_PROCES NUMBER(19, 0),
    PRIMARY KEY (ID)
);

ALTER TABLE AUTOMATISCH_PROCES_CONFIG
    ADD CONSTRAINT FK39F3573E561B9F9B
        FOREIGN KEY (PROCES_ID)
            REFERENCES AUTOMATISCH_PROCES;

ALTER TABLE BERICHT
    ADD CONSTRAINT BERICHT_LAADPROCESID_FKEY
        FOREIGN KEY (LAADPROCESID)
            REFERENCES LAADPROCES;

ALTER TABLE GEBRUIKER_GROEPEN
    ADD CONSTRAINT FKD875A48FD741C965
        FOREIGN KEY (GROEP_)
            REFERENCES GROEP_;

ALTER TABLE GEBRUIKER_GROEPEN
    ADD CONSTRAINT FKD875A48F49E041F8
        FOREIGN KEY (GEBRUIKERSNAAM)
            REFERENCES GEBRUIKER_;

ALTER TABLE LAADPROCES
    ADD CONSTRAINT FK8C420DCE3DA16A8
        FOREIGN KEY (AUTOMATISCH_PROCES)
            REFERENCES AUTOMATISCH_PROCES;

CREATE SEQUENCE AUTOMATISCHPROCES_ID_SEQ;

CREATE SEQUENCE BERICHT_ID_SEQ;

CREATE SEQUENCE LAADPROCES_ID_SEQ;

CREATE TABLE JOB
(
    JID            NUMBER(19, 0) NOT NULL,
    ID             NUMBER(19, 0),
    BR_XML         CLOB,
    DATUM          TIMESTAMP,
    OBJECT_REF     VARCHAR2(255 CHAR),
    SOORT          VARCHAR2(255 CHAR),
    VOLGORDENUMMER NUMBER(10, 0),
    PRIMARY KEY (JID)
);

CREATE SEQUENCE JOB_JID_SEQ;

CREATE TABLE GEOMETRIES
(
    ID    NUMBER(19, 0) NOT NULL,
    DATUM TIMESTAMP,
    NAAM  VARCHAR2(255 CHAR),
    GEOM  MDSYS.SDO_GEOMETRY,
    PRIMARY KEY (ID)
);

CREATE SEQUENCE GEOMETRIES_ID_SEQ;

CREATE OR REPLACE TRIGGER GEOM_INSERT_TRIGGER
    BEFORE INSERT
    ON GEOMETRIES
    FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        SELECT GEOMETRIES_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
END;
/

INSERT INTO USER_SDO_GEOM_METADATA
VALUES ('GEOMETRIES', 'GEOM', MDSYS.SDO_DIM_ARRAY(
        MDSYS.SDO_DIM_ELEMENT('X', 12000, 280000, .1),
        MDSYS.SDO_DIM_ELEMENT('Y', 304000, 620000, .1)),
        28992);

CREATE SEQUENCE TESTING_SEQ MINVALUE 1;

-- NOTE THAT ORACLE 23 ACTUALLY HAS A BOOLEAN TYPE, BUT WE'RE USING A NUMBER(1,0) INSTEAD FOR COMPATIBILITY WITH ORACLE 19
CREATE TABLE BOOLEANTABLE
(
    ID        NUMBER GENERATED ALWAYS AS IDENTITY,
    ISHETWAAR NUMBER(1, 0) DEFAULT 0 NOT NULL CHECK (ISHETWAAR IN (0, 1))
);